syntax = "proto3";

package auth_service;


import "google/protobuf/timestamp.proto";
// import "ts_proto/options.proto"; // Import ts-proto options

// option ts_nocheck = true;

// Common User Information
message AuthUserInfo {
  string userId = 1;
  string username = 2;
  string email = 3;
  string avatar  = 4;
  string status = 5;
  string role = 6;
  google.protobuf.Timestamp updatedAt = 7;
  google.protobuf.Timestamp createdAt = 8;
}

// Common Pagination Request
message PaginationRequest {
  int32 page = 1;
  int32 pageSize = 2;
}

// Common Pagination Response
message PaginationResponse {
  int32 totalItems = 1;
  int32 totalPages = 2;
}

// Generic Error Message
message Error {
  string code = 1; // e.g., "RESOURCE_NOT_FOUND", "INVALID_ARGUMENT", "UNAUTHENTICATED"
  string message = 2;
  repeated ErrorDetail details = 3; // Optional detailed error information
}

message ErrorDetail {
  optional string field = 1;
  string message = 2;
}



service AuthService {
  // User Registration
  rpc RegisterUser(RegisterUserRequest) returns (RegisterUserResponse);

  // Auth2 Sign
  rpc Auth2Sign(Auth2SignRequest) returns (Auth2SignResponse);

  rpc VerifyUser(VerifyUserRequest) returns (VerifyUserResponse);

  // User Login
  rpc LoginUser(LoginUserRequest) returns (LoginUserResponse);

  // Logout User
  rpc LogoutUser(LogoutUserRequest) returns (LogoutUserResponse);

  // Get New Refresh Token
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse);


  // Forgot Password
  rpc ForgotPassword(ForgotPasswordRequest) returns (ForgotPasswordResponse);

  // Change Password
  rpc ChangePassword(ChangePasswordRequest) returns (ChangePasswordResponse);

  rpc ResetPassword(ResetPasswordRequest) returns (ResetPasswordResponse);
 

  // Block/Unblock a User
  rpc BlockUser(BlockUserRequest) returns (BlockUserResponse);

  // Block/Unblock a User
  rpc UnBlockUser(UnBlockUserRequest) returns (UnBlockUserResponse);

 
}

// --- Request and Response Messages ---

// Register User
message RegisterUserRequest {
  string firstName = 1;
  string lastName = 7;
  string email = 2;
  string password = 3;
  string role = 4;
  string avatar = 5;
  string authType = 6; // e.g., "password", "google", "facebook"
 
}

message Auth2SignRequest {
  string token = 1;
  string provider = 2; // e.g., "google", "facebook"
  string authType = 3; // e.g., "password", "google", "facebook"

}

message Auth2SignResponse {
  oneof result {
    AuthUserResponse success = 1;
    Error error = 2;
  }
  
}


message LogoutUserRequest {
  string userId = 1;
}

message LogoutResponse {
  string userId = 1;
  string message = 2;
}
message LogoutUserResponse {
  oneof result {
  LogoutResponse success = 1;
  Error error = 2;

  }
}
// Verify User
message VerifyUserRequest {
  string email = 1;
}

message RegisterUserResponse {
  oneof result {
    string userId = 1;
    Error error = 2;
  }
}

// Login User
message LoginUserRequest {
  string email = 1;
  string password = 2;
  bool rememberMe = 3;
 
}

message LoginUserResponse {
  oneof result {
    AuthUserResponse success = 1;
    Error error = 2;
  }
}
message VerifyUserResponse {
  oneof result {
    AuthUserResponse success = 1;
    Error error = 2;
  }
}

message AuthUserResponse {
  string accessToken = 1;
  string refreshToken = 2;
}
message InstructorSuccessResponse {
  string accessToken = 1;
  string refreshToken = 2;
}

message RegisterInstructorResponse {
 oneof  result {
  Error error = 1;
  InstructorSuccessResponse success = 2;
  
 } 
}

// Get New Refresh Token
message RefreshTokenRequest {
  string refreshToken = 1;
}

message RegisterInstructorRequest {
  string userId = 1;
}


message RefreshTokenResponse {
  oneof result {
    RefreshSuccess success = 1;
    Error error = 2;
  }
}

message RefreshSuccess {
  string accessToken = 1;
  string refreshToken = 2;
}

// Forgot Password
message ForgotPasswordRequest {
  string email = 1;
}

message ForgotPasswordResponse {
  oneof result {
    ForgotPasswordSuccess success = 1;
    Error error = 2;
  }
}

message ForgotPasswordSuccess {
    string username = 1; // User ID
    string userId = 5; // User ID
    string email = 2;   // Email address
    string resetLink = 3; // Password reset link,
    // int32 expires = 4;
}



// Change Password
message ChangePasswordRequest {
  string userId = 1;
  string oldPassword = 2;
  string newPassword = 3;
}

message ResetPasswordRequest {
  string token = 1;
  string password = 2;
  string confirmPassword = 3;
}

message ResetPasswordResponse {
  oneof result {
    ResetPasswordSuccess success = 1;
    Error error = 2;
  }
}
message ChangePasswordResponse {
  oneof result {
    ChangePasswordSuccess success = 1;
    Error error = 2;
  }
}

message ChangePasswordSuccess {
  bool updated = 1;
}
message ResetPasswordSuccess {
  bool updated = 1;
}

message CheckUserByEmailRequest {
  string email = 1;
}

message EmailExist {
    string success = 1;
    string error = 2; 
}


message CheckUserByEmailResponse {
  oneof result {
    EmailExist response = 1;
    Error error = 2;
  }
}

// Block User
message BlockUserRequest {
  string userId = 1;
}
message UnBlockUserRequest {
  string userId = 1;
}

message BlockUserResponse {
  oneof result {
    BlockUserSuccess success = 1;
    Error error = 2;
  }
}
message UnBlockUserResponse {
  oneof result {
    UnBlockUserSuccess success = 1;
    Error error = 2;
  }
}

message BlockUserSuccess {
  bool updated = 1;
}

message UnBlockUserSuccess {
  bool updated = 1;
}
