syntax = "proto3";

package user;


import "google/protobuf/timestamp.proto";
// import "ts_proto/options.proto"; // Import ts-proto options

// option ts_nocheck = true;

// Common User Information
message UserInfo {
  string userId = 1;
  string username = 2;
  string email = 3;
  string avatar  = 4;
  string status = 5;
  string role = 6;
  google.protobuf.Timestamp updatedAt = 7;
  google.protobuf.Timestamp createdAt = 8;
}

// Common Pagination Request
message PaginationRequest {
  int32 page = 1;
  int32 pageSize = 2;
}

// Common Pagination Response
message PaginationResponse {
  int32 totalItems = 1;
  int32 totalPages = 2;
}

// Generic Error Message
message Error {
  string code = 1; // e.g., "RESOURCE_NOT_FOUND", "INVALID_ARGUMENT", "UNAUTHENTICATED"
  string message = 2;
  repeated ErrorDetail details = 3; // Optional detailed error information
}

message ErrorDetail {
  string field = 1;
  string message = 2;
}

message WalletTransaction {
  string transactionId = 1;
  string userId = 2;
  double amount = 3;
  string type = 4; // e.g., "deposit", "withdrawal", "purchase"
  google.protobuf.Timestamp transactionDate = 5;
}

service UserService {
  // User Registration
  rpc RegisterUser(RegisterUserRequest) returns (RegisterUserResponse);

  // Auth2 Sign
  rpc Auth2Sign(Auth2SignRequest) returns (Auth2SignResponse);

  rpc VerifyUser(VerifyUserRequest) returns (VerifyUserResponse);

  // User Login
  rpc LoginUser(LoginUserRequest) returns (LoginUserResponse);

  // Logout User
  rpc LogoutUser(LogoutUserRequest) returns (LogoutUserResponse);

  // Get New Refresh Token
  rpc GetNewRefreshToken(GetNewRefreshTokenRequest) returns (GetNewRefreshTokenResponse);

  // Get New Refresh Token
  rpc RegisterInstructor(GetNewRefreshTokenRequest) returns (GetNewRefreshTokenResponse);

  // Forgot Password
  rpc ForgotPassword(ForgotPasswordRequest) returns (ForgotPasswordResponse);

  // Update User Details
  rpc UpdateUserDetails(UpdateUserDetailsRequest) returns (UpdateUserDetailsResponse);

  // Change Password
  rpc ChangePassword(ChangePasswordRequest) returns (ChangePasswordResponse);

  // Get Wallet Transactions for a User (with pagination)
  rpc GetWalletTransactions(GetWalletTransactionsRequest) returns (GetWalletTransactionsResponse);

  // Get All Users (with pagination)
  rpc GetAllUsers(GetAllUsersRequest) returns (GetAllUsersResponse);

  // Get All Users emails
  rpc GetAllUserEmails(GetAllUserEmailsRequest) returns (GetAllUserEmailsResponse);
  
  // Get All Users emails
  rpc CheckUserEmailExist(CheckUserByEmailRequest) returns (CheckUserByEmailResponse);

  // Get Details About a Particular User by ID
  rpc GetUserById(GetUserByIdRequest) returns (GetUserByIdResponse);

//   // Get Details About the currently logged in User
  rpc GetCurrentUser(GetCurrentUserRequest) returns (GetCurrentUserResponse);

  // Block/Unblock a User
  rpc BlockUser(BlockUserRequest) returns (BlockUserResponse);

  // Block/Unblock a User
  rpc UnBlockUser(UnBlockUserRequest) returns (UnBlockUserResponse);

  rpc GetDetailedUser(GetDetailedUserRequest) returns (GetDetailedUserResponse);

  // Get All Instructors (with pagination)
  rpc GetAllInstructors(GetAllInstructorsRequest) returns (GetAllInstructorsResponse);
}

// --- Request and Response Messages ---

// Register User
message RegisterUserRequest {
  string username = 1;
  string email = 2;
  string password = 3;
  string role = 4;
  string avatar = 5;
  string authType = 6; // e.g., "password", "google", "facebook"
 
}

message Auth2SignRequest {
  string username = 1;
  string email = 2;
  string role = 4;
  string avatar = 5;
  string authType = 6; // e.g., "password", "google", "facebook"

}

message Auth2SignResponse {
  string accessToken = 1;
  string refreshToken = 2;
  UserInfo user = 3;
}

message LogoutUserRequest {
  string userId = 1;
}

message LogoutUserResponse {
  string userId = 1;
  string message = 2;
}
// Verify User
message VerifyUserRequest {
  string email = 1;
}

message RegisterUserResponse {
  oneof result {
    string userId = 1;
    Error error = 2;
  }
}

// Login User
message LoginUserRequest {
  string email = 1;
  string password = 2;
 
}

message LoginUserResponse {
  oneof result {
    LoginSuccess success = 1;
    Error error = 2;
  }
}
message VerifyUserResponse {
  oneof result {
    VerifySuccess success = 1;
    Error error = 2;
  }
}

message LoginSuccess {
  string accessToken = 1;
  string refreshToken = 2;
  UserInfo user = 3;
}
message RegisterInstructorResponse {
  string accessToken = 1;
  string refreshToken = 2;
  UserInfo user = 3;
}

message VerifySuccess {
  string accessToken = 1;
  string refreshToken = 2;
  UserInfo user = 3;
}

// Get New Refresh Token
message GetNewRefreshTokenRequest {
  string refreshToken = 1;
}

message RegisterInstructorRequest {
  string userId = 1;
}


message GetNewRefreshTokenResponse {
  oneof result {
    RefreshSuccess success = 1;
    Error error = 2;
  }
}

message RefreshSuccess {
  string accessToken = 1;
  string refreshToken = 2;
}

// Forgot Password
message ForgotPasswordRequest {
  string email = 1;
}

message ForgotPasswordResponse {
  oneof result {
    ForgotPasswordSuccess success = 1;
    Error error = 2;
  }
}

message ForgotPasswordSuccess {
  bool acknowledged = 1;
}

message GetDetailedUserRequest {
  string userId = 1;
}

message GetDetailedUserResponse {
  string userId = 1;
  optional string firstName = 2;
  optional string lastName = 3;
  optional string phone = 4;
  optional string headline = 5;
  optional string biography = 6;
  optional string avatar = 7;
  optional string website = 8;
  optional string language = 9;
  optional string facebook = 10;
  optional string instagram = 11;
  optional string linkedin = 12;
  string status = 13;
  string role = 14;
  string email = 15;
  google.protobuf.Timestamp updatedAt = 16;
  google.protobuf.Timestamp createdAt = 17;

}

// Update User Details
message UpdateUserDetailsRequest {
  string userId = 1;
  optional string firstName = 2;
  optional string lastName = 3;
  optional string phone = 4;
  optional string headline = 5;
  optional string biography = 6;
  optional string avatar = 7;
  optional string website = 8;
  optional string language = 9;
  optional string facebook = 10;
  optional string instagram = 11;
  optional string linkedin = 12;

  
}

message UpdateUserDetailsResponse {
  oneof result {
    UserInfo user = 1;
    Error error = 2;
  }
}

// Change Password
message ChangePasswordRequest {
  string userId = 1;
  string oldPassword = 2;
  string newPassword = 3;
}

message ChangePasswordResponse {
  oneof result {
    ChangePasswordSuccess success = 1;
    Error error = 2;
  }
}

message ChangePasswordSuccess {
  bool updated = 1;
}

// Get Wallet Transactions
message GetWalletTransactionsRequest {
  string userId = 1;
  PaginationRequest pagination = 2;
}

message GetWalletTransactionsResponse {
  oneof result {
    WalletTransactionsSuccess success = 1;
    Error error = 2;
  }
}

message WalletTransactionsSuccess {
  repeated WalletTransaction transactions = 1;
  PaginationResponse pagination = 2;
}

// Get All Users
message GetAllUsersRequest {
  PaginationRequest pagination = 1;
}

message GetAllUserEmailsRequest {
}

message GetAllUsersResponse {
  oneof result {
    AllUsersSuccess success = 1;
    Error error = 2;
  }
}
message GetAllUserEmailsResponse {
  oneof result {
    AllUserEmailsSuccess success = 1;
    Error error = 2;
  }
}

message AllUserEmailsSuccess {
    repeated string email = 1;
    
}

message AllUsersSuccess {
  repeated UserInfo users = 1;
  PaginationResponse pagination = 2;
}

// Get User By ID
message GetUserByIdRequest {
  string userId = 1;
}
message GetCurrentUserRequest {
  string userId = 1;
}

message CheckUserByEmailRequest {
  string email = 1;
}

message EmailExist {
    string success = 1;
    string error = 2; 
}


message CheckUserByEmailResponse {
  oneof result {
    EmailExist response = 1;
    Error error = 2;
  }
}
message GetCurrentUserResponse {
  oneof result {
    UserInfo user = 1;
    Error error = 2;
  }
}
message GetUserByIdResponse {
  oneof result {
    UserInfo user = 1;
    Error error = 2;
  }
}

// Block User
message BlockUserRequest {
  string userId = 1;
}
message UnBlockUserRequest {
  string userId = 1;
}

message BlockUserResponse {
  oneof result {
    BlockUserSuccess success = 1;
    Error error = 2;
  }
}
message UnBlockUserResponse {
  oneof result {
    UnBlockUserSuccess success = 1;
    Error error = 2;
  }
}

message BlockUserSuccess {
  bool updated = 1;
}

message UnBlockUserSuccess {
  bool updated = 1;
}

// Get All Instructors
message GetAllInstructorsRequest {
  PaginationRequest pagination = 1;
}

message GetAllInstructorsResponse {
  oneof result {
    AllInstructorsSuccess success = 1;
    Error error = 2;
  }
}

message AllInstructorsSuccess {
  repeated UserInfo instructors = 1;
  PaginationResponse pagination = 2;
}